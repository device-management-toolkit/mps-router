#*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

# This workflow will release new versions when required using semantic-release

name: Semantic-Release CI

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  release:
    permissions:
      contents: write  # for Git to git push
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.11.1
    - name: Docker Login
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: vprodemo.azurecr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Login DockerHub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: docker.io
        username: ${{ secrets.INTC_DOCKER_USERNAME }}
        password: ${{ secrets.INTC_DOCKER_PASSWORD }}
        logout: true
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@16ca923e6ccbb50770c415a0ccd43709a8c5f7a4 # v4.2.2
      with:
        semantic_version: 19.0.5  # It is recommended to specify specifying version range
                                    # for semantic-release.
        extra_plugins: |
          @semantic-release/exec@6.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.ROSIE_TOKEN }}

    - name: Get Next Version
      id: version
      run: |
        if [ -f .nextVersion ]; then
          echo "next=$(cat .nextVersion)" >> "$GITHUB_OUTPUT"
        else
          echo "next=none" >> "$GITHUB_OUTPUT"
        fi
  
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      if: ${{ steps.version.outputs.next != 'none' }}
      with:
        repository: device-management-toolkit/e2e-testing
        ref: docker-release
        clean: true
        token: ${{ secrets.ROSIE_TOKEN }}
  
    - name: Create docker-release @ ${{ steps.version.outputs.next }}
      if: ${{ steps.version.outputs.next != 'none' }}
      env:
        RELEASE_YAML: release/mps-router.yml
        NEXT_VERSION: ${{ steps.version.outputs.next }}
      run: |
        echo "Releasing ${{ github.repository }}@$NEXT_VERSION"
        if [ "$NEXT_VERSION" != "" ]; then
          CURRENT_VERSION=$(sed -nre 's/(.*):v[0-9]*(([0-9]+\\.)*[0-9]+).*/v\\2/p' $RELEASE_YAML)
          sed -i "s/$CURRENT_VERSION/$NEXT_VERSION/g" $RELEASE_YAML
          echo "========================="
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git status
          git add .
          git commit -m "release(mps-router): automated release of $NEXT_VERSION @ ${GITHUB_SHA::7}"
          git push origin docker-release
        fi
  